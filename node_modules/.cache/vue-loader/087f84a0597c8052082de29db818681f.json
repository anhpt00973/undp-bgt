{"remainingRequest":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\vuejs-sourcode\\undp-bgt\\src\\views\\QuanLyDanhMuc.vue?vue&type=template&id=6cd8d9dc&","dependencies":[{"path":"F:\\vuejs-sourcode\\undp-bgt\\src\\views\\QuanLyDanhMuc.vue","mtime":1665053037814},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665053118014},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1665053120753},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665053118014},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\vue-loader\\lib\\index.js","mtime":1665053120378}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}