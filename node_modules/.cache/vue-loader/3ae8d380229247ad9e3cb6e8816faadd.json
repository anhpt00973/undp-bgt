{"remainingRequest":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\vuejs-sourcode\\undp-bgt\\src\\views\\MauThongKe.vue?vue&type=template&id=2560ae87&","dependencies":[{"path":"F:\\vuejs-sourcode\\undp-bgt\\src\\views\\MauThongKe.vue","mtime":1665464457741},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665053118014},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1665053120753},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665053118014},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\vue-loader\\lib\\index.js","mtime":1665053120378}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}