{"remainingRequest":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\vuejs-sourcode\\undp-bgt\\src\\views\\ChiTietBaoCao.vue?vue&type=template&id=4ba7601f&","dependencies":[{"path":"F:\\vuejs-sourcode\\undp-bgt\\src\\views\\ChiTietBaoCao.vue","mtime":1665053037812},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665053118014},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1665053120753},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665053118014},{"path":"F:\\vuejs-sourcode\\undp-bgt\\node_modules\\vue-loader\\lib\\index.js","mtime":1665053120378}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}